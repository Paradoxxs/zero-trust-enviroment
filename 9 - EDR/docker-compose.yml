services:


  juice:
    image: bkimminich/juice-shop
    container_name: webapp
    ports:
      - 8080:3000
    networks:
      - dmz

  bottle-filling_plc: 
      image: paradoxxs/virtuaplant:plc
      container_name: bottle-filling_plc
      ports:
        - 5020:5020
        - 3001:3000
      networks:
        - Production


  bottle-filling_hmi:
      image: paradoxxs/virtuaplant:hmi
      container_name: bottle-filling_hmi
      environment:
        - PLC_SERVER_IP=bottle-filling_plc
        - PLC_SERVER_PORT=5020
      ports:
        - 3002:3000
      depends_on:
        - bottle-filling_plc
      networks:
        - Production
        
  Engineer_jumpbox:
    image: lscr.io/linuxserver/chromium:latest
    container_name: Engineer_jumpbox
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - TITLE=Jumpbox
      - CHROME_CLI=http://bottle-filling_hmi:3002 #optional
    ports:
      - 3003:3000 # http
      - 3004:3001 # https
    shm_size: "1gb"
    restart: unless-stopped
    networks:
      - Production
      - corperation

  vuln_samba:
    image: vulhub/samba:4.6.3
    container_name: samba
    tty: true
    volumes:
    - ./samba/smb.conf:/usr/local/samba/etc/smb.conf
    - ./samba/data:/storage
    ports:
    - "4450:445"
    networks:
      - corperation


  postgres:
    image: vulhub/postgres:10.7
    container_name: postgres
    ports:
    - "5432:5432"
    environment:
    - POSTGRES_PASSWORD=postgres
    networks:
      - corperation

  endpoint:
    image: paradoxxs/ciso:endpoint
    networks:
      - corperation

  endpoint2:
    image: paradoxxs/ciso:user
    networks:
      - corperation

  suricata:
    image: jasonish/suricata:latest
    container_name: suricata
    network_mode: host
    cap_add:
      - NET_ADMIN
      - NET_RAW
      - SYS_NICE
    volumes:
      - ./suricata/logs:/var/log/suricata
      - ./suricata/rules:/var/lib/suricata/rules
      - ./suricata/suricata.yaml:/etc/suricata/suricata.yaml
    command: -i eth0
    tty: true
    stdin_open: true
    restart: unless-stopped

  velociraptor:
    container_name: velociraptor
    image: wlambert/velociraptor
    volumes:
      - ./velociraptor:/velociraptor/:rw
    environment:
      - VELOX_USER=${VELOX_USER}
      - VELOX_PASSWORD=${VELOX_PASSWORD}
      - VELOX_ROLE=${VELOX_ROLE}
      - VELOX_SERVER_URL=${VELOX_SERVER_URL}
      - VELOX_FRONTEND_HOSTNAME=${VELOX_FRONTEND_HOSTNAME}
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8889:8889"
    restart: unless-stopped
    networks:
      - corperation
      - dmz
      - Production
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:8889",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  velo_client:
    container_name: velo_client
    depends_on:
      velociraptor:
        condition: service_healthy
    image: ubuntu
    tty: true
    volumes:
      - ./velociraptor:/velociraptor/:ro
    networks:
      - corperation
    entrypoint: ["/velociraptor/clients/linux/velociraptor_client_repacked", "--config=/velociraptor/client.config.yaml", "client", "-v"]

networks:
  dmz:
    name: dmz
  Production:
    name: Production
    internal: true
  corperation:
    name: corperation

